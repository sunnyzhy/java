1.下载maven
http://maven.apache.org/download.cgi

2.解压，配置环境变量
1).修改maven的本地仓库：
打开conf -> settings.xml
<localRepository>D:/maven-jar</localRepository>

2).把maven源替换为阿里云的源
<mirrors>
  <mirror> 
    <id>alimaven</id> 
    <name>aliyun maven</name> 
    <url>http://maven.aliyun.com/nexus/content/groups/public/</url> 
    <mirrorOf>central</mirrorOf> 
  </mirror> 
</mirrors>

3).新建系统变量
"变量名"：MAVEN_HOME
"变量值"：D:\apache-maven-3.5.0

4).编辑系统变量Path
在"变量值"最后面添加;%MAVEN_HOME%\bin;

3.测试
>mvn -v
Apache Maven 3.5.0 (ff8f5e7444045639af65f6095c62210b5713f426; 2017-04-04T03:39:0
6+08:00)
Maven home: D:\apache-maven-3.5.0\bin\..
Java version: 1.8.0_45, vendor: Oracle Corporation
Java home: D:\Program Files (x86)\Java\jdk1.8.0_45\jre
Default locale: zh_CN, platform encoding: GBK
OS name: "windows 7", version: "6.1", arch: "x86", family: "windows"

4.在Eclipse里配置maven
打开Window -> Preference -> Maven
1).Installation -> Add -> 选择maven解压的目录D:\apache-maven-3.5.0
2).User Settings -> Global Settings -> 选择D:\apache-maven-3.5.0\conf\settings.xml

5.使用maven新建web工程
1).打开File -> New -> Maven Project -> 选择maven-archetype-webapp -> Next
Group Id: 输入包名 com.zhy.mavenweb
Artifact Id: 输入项目名 test

2).如果项目报警"java.servlet.http.HttpServlet" was not found on the Java Build Path
右击web工程 -> Build Path -> Configure Build Path... -> Libraries -> Add Library... -> Server Runtime -> Apache Tomcat v8.0 -> Finish

3).配置pom.xml
     <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-webmvc</artifactId>
    	<version>4.2.5.RELEASE</version>
    	<type>jar</type>
    </dependency>

