1.java项目上会出现红叉叉的图标
解决方法：
1).右键点击项目 -> Properties -> JavaBuildPath -> Libraries -> JRE SystemLibrary -> 点击 Edit 按钮
2).选择 Alternate JRE -> 点击 InstalledJREs 按钮
3).点击 Add 按钮 -> 选择Standard VM -> 点击 Next 按钮
4).在 JRE home 中设置 jdk 目录(注意，不是 jre 目录) -> 点击 Finish 按钮 
5).勾选刚才设置的 jdk 选项 -> 点击 OK 按钮
6).完成

2.发布项目的时候，Tomcat WEB-INF lib目录为空的情况
解决方法：
1).右键点击项目 -> Properties -> 选择 Deployment Assembly 选项 -> 点击 Add 按钮
2).选择Java Build Path Entries -> 点击 Next 按钮 -> 选择列表里的jar包 -> 点击 Finish 按钮 -> 点击 Apply 按钮 -> 点击 OK 按钮
3).重新编译项目即可

3.JSONObject使用异常
缺少commons-beanutils-1.8.0.jar
java.lang.NoClassDefFoundError: org/apache/commons/beanutils/DynaBean 
缺少commons-collections.jar
java.lang.NoClassDefFoundError: org/apache/commons/collections/map/ListOrderedMap
缺少commons-lang-2.4.jar 
java.lang.NoClassDefFoundError: org/apache/commons/lang/exception/NestableRuntimeException
缺少commons-logging-1.1.1.jar
java.lang.NoClassDefFoundError: org/apache/commons/logging/LogFactory 
缺少ezmorph-1.0.4.jar 
java.lang.NoClassDefFoundError: net/sf/ezmorph/Morpher 
缺少json-lib-2.3-jdk15.jar
java.lang.NoClassDefFoundError: net/sf/json/JSONObject 

4.An internal error occurred during: "reload maven project". java.lang.NullPointerExceptio
解决方法：
找到workspace文件夹下的/.metadata文件夹, 在.metadata下搜索workbench.xmi文件，用记事本打开，ctrl+F搜索找到包含<tags>org.eclipse.e4.primaryDataStack</tags>的<sharedElements></sharedElements>,将其删除然后保存 ，重启eclipse。

5.maven仓库
https://mvnrepository.com 

6.Unknown lifecycle phase "xxx". You must specify a valid lifecycle phase or a goal in the format ...
解决方法：
运行四个命令：
第一步：mvn install
第二步：mvn compiler:compile
第三步：mvn org.apache.maven.plugins:maven-compiler-plugin:compile
第四步：mvn org.apache.maven.plugins:maven-compiler-plugin:2.0.2:compile

7.No goals have been specified for this build.
解决方法：
pom.xml文件<build>标签后面加上<defaultGoal>compile</defaultGoal>即可  

8.Maven 项目生成jar运行时提示"没有主清单属性"
解决方法：
没有找到入口类（即main函数所在的类），在pom.xml里面加上入口类的配置<mainClass>包名.类名</mainClass>即可

9.Eclipse-CHKJ3000E: WAR Validation Failed
解决方法：
Project Name -> 右键 -> Validate -> OK

10.Cannot change version of project facet Dynamic web module to 3.1
解决方法：
1).切换到Navigator，打开工程项目的.settings/org.eclipse.wst.common.project.facet.core.xml，把jst.web对应的版本号改为3.1
2).打开pom.xml，在build -> plugins节点下添加plugin子节点
  <build>
    <finalName>project name</finalName>
    <plugins>
    	<plugin>
    			<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version> <!-- jst.web对应的版本号 -->
                <configuration>
                    <source>1.8</source> <!-- jdk对应的版本号 -->
                    <target>1.8</target> <!-- jdk对应的版本号 -->
                    <encoding>UTF-8</encoding>
                </configuration>
         </plugin>
    </plugins>
  </build>
3).右键工程名称 -> Maven -> Update Project... -> OK

11.No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK? 
解决方法：
1).进入 Window -> Preferences -> Java -> Installed JREs -> Execution Environments -> JavaSE-1.8 -> 在右侧选择jdk
2).右键工程名称 -> Maven -> Update Project... -> OK

12.Jersey No WebApplication provider is present
解决方法：
重新下载jersey-server
<!-- https://mvnrepository.com/artifact/com.sun.jersey/jersey-server -->
<dependency>
    <groupId>com.sun.jersey</groupId>
    <artifactId>jersey-server</artifactId>
    <version>1.19.1</version>
</dependency>

13. should trim empty <tag>
解决方法：tag标签之间要有空格或换行
<tag>
</tag>
Or adding a space:
<tag> </tag>

14.Multiple Contexts have a path of 错误的解决办法
解决方法：
删掉Servers里的Tomcat vX.X Server，重新添加Server

15.Type The superclass "javax.servlet.http.HttpServlet" was not found on the Java Build Path
解决方法：
右键点击项目 -> Properties -> JavaBuildPath -> Libraries -> Add Library... -> Server Runtime -> Next -> Apache Tomcat v8.0 -> Finish -> Apply -> OK

16.The content of element type "web-app" must match "(icon?,display-name?,description?,distributable?,context-param*,filter*,filter-mapping*,listener*,servlet*,servlet- mapping*,session-config?,mime-mapping*,welcome-file-list?,error-page*,taglib*,resource-env-ref*,resource-ref*,security-constraint*,login-config?,security-role*,env-entry*,ejb-ref*,ejb-local-ref*)".
解决方法：
在Web.xml中<web-app>标签的元素个数和排序规则是有限制的，大多数情况下出现该错误的原因是元素排放顺序有误，按照上面的描述将各元素排序即可。

17.java.io.FileNotFoundException: class path resource [beans.xml] cannot be opened because it does not exit.
解决方法：
用maven创建的项目，必须把spring的配置文件beans.xml或者applicationContext.xml放到系统根目录下，maven项目的系统根目录默认是src/main/java和src/main/resources，而不是src，所以beans.xml文件必须放到src/main/java和src/main/resources下面的文件夹或者包中，在加载的时候这样写：
ApplicationContext applicationContext=new ClassPathXmlApplicationContext("beans.xml"); 
如果beans.xml不是直接放到了src/main/java和src/main/resources路径下，而是放在了src/main/java/conf路径下，那么加载时候要这样写：
ApplicationContext applicationContext=new ClassPathXmlApplicationContext("conf/beans.xml");  

18.JSP EL表达式取不到值
解决方法：
<%@ page isELIgnored="false" %>

19.创建maven项目报错
解决方法：
右键maven工程 -> Maven -> Update Project... -> 勾选Force Update

20.slf4j报错
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
解决方法：
一般只是在程序中引入了slf4j-api-xxx.jar文件，还需引入slf4j-nop-xxx.jar
